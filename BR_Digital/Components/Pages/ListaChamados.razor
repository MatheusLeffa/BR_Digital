@page "/lista-chamados"
@rendermode InteractiveServer

<PageTitle>Lista de chamados</PageTitle>

<table class="table table-bordered table-hover table-sm">
    <thead>
        <tr>
            <th>Chamado</th>
            <th>Cliente</th>
            <th>Trecho</th>
            <th>Status</th>
            <th>Tipo</th>
            <th>Abertura</th>
            <th>Interação</th>
            <th>Opções</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Chamado chamado in ListaChamado)
        {
            <tr class="@GetRowsColor(chamado.Status)">
                <td>@chamado.CodigoChamado</td>
                <td>@chamado.Cliente.Nome</td>
                <td>@chamado.Trecho</td>
                <td>@chamado.Status</td>
                <td>@chamado.Tipo</td>
                <td>@chamado.Abertura</td>
                <td>@chamado.Interacao</td>
                <td>
                    <button type="button" class="btn btn-primary btn-sm" title="Editar"><i class="bi bi-pencil-square"></i></button>
                    <button type="button" class="btn btn-danger btn-sm" title="Apagar" onclick="modalConfirm()"><i class="bi bi-trash3"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    public List<Chamado> ListaChamado { get; set; } = new();
    public string CorLinha { get; set; } = "";

    protected override void OnInitialized()
    {
        PopularListaChamado();
    }

    // TODO: Passar esse metodo para o repository e chamar ele na inicialização da aplicação
    private void PopularListaChamado()
    {
        Cliente vivo = new Cliente("VIVO");
        Cliente tim = new Cliente("TIM");

        Chamado chamado1 = new Chamado(vivo, "este / aquele", TipoChamado.Backbone_Tx, StatusChamado.StatusTeste);
        Chamado chamado2 = new Chamado(vivo, "este / aquele", TipoChamado.Backbone_Tx, StatusChamado.StatusTeste2);
        Chamado chamado3 = new Chamado(tim, "este / aquele", TipoChamado.Backbone_Rx, StatusChamado.StatusTeste, new DateTime(2025, 04, 23, 0, 0, 0, DateTimeKind.Local));

        ListaChamado.Add(chamado1);
        ListaChamado.Add(chamado2);
        ListaChamado.Add(chamado3);
    }

    private string GetRowsColor(StatusChamado status)
    {
        return status switch
        {
            StatusChamado.StatusTeste => "table-warning",
            StatusChamado.StatusTeste2 => "table-danger",
            _ => ""
        };
    }
}

<script>
    function modalConfirm(){
        confirm("Teste");
    };
</script>